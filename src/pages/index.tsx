import getCurrentUser from "@/actions/getCurrentUser";
import getRoomsData from "@/actions/getRoomsData";
import Categories from "@/components/Navbar/Categories";
import CarouselRoomCard from "@/components/shared/rooms/RoomCard";
import {
  Container,
  Grid,
  Box,
  AppBar,
  Typography,
  Button,
} from "@mui/material";
import Head from "next/head";
import { useInfiniteQuery } from "@tanstack/react-query";
import axios from "axios";
import { useRef, useEffect } from "react";
import { useIntersection } from "@mantine/hooks";

/* 
 TODO: Zvolit správné typování místo any
*/

export default function Home({ initialRooms, currentUser }: any) {
  const { data, fetchNextPage, isFetchingNextPage, hasNextPage } =
    useInfiniteQuery(
      ["rooms"],
      async ({ pageParam = 1 }) => {
        const response = await axios.get(`/api/get-rooms?page=${pageParam}`);
        return response.data;
      },
      {
        getNextPageParam: (lastPage, allPages) => {
          if (lastPage.length === 0) {
            return null;
          }
          return allPages.length + 1;
        },
        initialData: {
          pages: [initialRooms],
          pageParams: [1],
        },
      }
    );

  const lastRoomRef = useRef<HTMLElement>(null);
  const { ref, entry } = useIntersection({
    root: lastRoomRef.current,
    threshold: 1,
  });

  useEffect(() => {
    if (entry?.isIntersecting && hasNextPage) fetchNextPage();
  }, [entry, hasNextPage]);

  const _rooms = data?.pages.flatMap((page) => page);

  return (
    <>
      <Head>
        <title>Vacation Homes & Condo Rentals - Airbnb</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/airbnb-icon.svg" />
      </Head>

      <Container sx={{ my: "3rem", paddingBottom: "5rem" }}>
        <Grid
          container
          rowSpacing={1}
          columnSpacing={{ xs: 1, sm: 2, md: 3 }}
          px={"2rem"}
          sx={{
            justifyContent: { xs: "center", md: "flex-start" },
          }}
        >
          {_rooms?.map((room, i) => (
            <Grid
              ref={i === _rooms.length - 1 ? ref : null}
              item
              xs={12}
              sm={6}
              md={4}
              key={room.id}
            >
              <CarouselRoomCard data={room} currentUser={currentUser} />
            </Grid>
          ))}
        </Grid>
        <Button disabled={isFetchingNextPage}>
          {isFetchingNextPage
            ? "Loading More..."
            : (data?.pages.length ?? 0) < 3
            ? "Load more"
            : "Nothing more to load"}
        </Button>
      </Container>
    </>
  );
}

export async function getServerSideProps({ req, res }: any) {
  const initialRooms = await getRoomsData(1, 6);
  const currentUser = await getCurrentUser(req, res);

  return {
    props: {
      initialRooms,
      currentUser,
    },
  };
}
